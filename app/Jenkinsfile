pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "manjeshh/nlp-app:latest"
        REPO_URL = 'https://github.com/manjeshsinghh/devopsproject.git'
        BRANCH = 'main'
    }

    stages {
        stage('Clone Repository') {
            steps {
                git branch: "${BRANCH}", url: "${REPO_URL}"
            }
        }

        stage('Verify Docker Compose File') {
            steps {
                
                bat 'dir C:\\ProgramData\\Jenkins\\.jenkins\\workspace\\pipeline\\app'
            }
        }

        stage('Build Docker Images') {
            steps {
                
                bat 'docker-compose -f app/Docker-compose.yml build'
            }
        }

        stage('Run Containers') {
            steps {
                bat 'docker-compose -f app/Docker-compose.yml up -d'
            }
        }

        stage('Push to Docker Hub') {
            steps {
                script {
                    withCredentials([usernamePassword(
                        credentialsId: 'dockerhub-creds',
                        usernameVariable: 'DOCKER_USER',
                        passwordVariable: 'DOCKER_PASS'
                    )]) {
                        bat "docker login -u %DOCKER_USER% -p %DOCKER_PASS%"
                        bat "docker push ${DOCKER_IMAGE}"
                        bat "docker logout"
                    }
                }
            }
        }

        stage('Deploy with Docker Compose') {
            steps {
                script {
                    bat "docker-compose -f app/Docker-compose.yml down"
                    bat "docker-compose -f app/Docker-compose.yml pull"
                    bat "docker-compose -f app/Docker-compose.yml up -d"
                }
            }
        }

        stage('Check Running Containers') {
            steps {
                bat 'docker ps'
            }
        }
    }

    post {
        always {
            echo 'Pipeline finished!'
        }
        success {
            emailext subject: "Jenkins Build Successful",
                     body: "Good news! The Jenkins build and deployment were successful.",
                     to: "manjeshsingh0245@gmail.com"
        }
        failure {
            emailext subject: "Jenkins Build Failed",
                     body: "Oops! The Jenkins build failed. Check the logs.",
                     to: "manjeshsingh0245@gmail.com"
        }
    }
}
